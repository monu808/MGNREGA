version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mgnrega_db
    environment:
      POSTGRES_DB: mgnrega_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - mgnrega_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mgnrega_backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: mgnrega_db
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - mgnrega_network
    restart: unless-stopped
    volumes:
      - ./backend/logs:/app/logs

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mgnrega_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - mgnrega_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  mgnrega_network:
    driver: bridge
